name: qa
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - '*'
env:
  GO_VERSION: '1.20'
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v4
        with:
          version: ${{env.GO_VERSION}}
      - name: Install Dependencies
        run: |
          go install honnef.co/go/tools/cmd/staticcheck@latest
          go install github.com/kisielk/errcheck@latest
          go install mvdan.cc/gofumpt@latest
      - name: Go lints
        run: |
          go vet ./...
          errcheck ./...
          staticcheck ./...
          test -z $(gofumpt -l .)
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-go@v4
        with:
          version: ${{env.GO_VERSION}}
      - name: Run Tests
        run: go test -covermode=atomic -coverprofile=.coverage.out ./...
      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.organization=crazybolillo
            -Dsonar.projectKey=crazybolillo_alertapp
            -Dsonar.test.inclusions=**/*_test.go
            -Dsonar.go.coverage.reportPaths=.coverage.out
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v4
        with:
          version: ${{env.GO_VERSION}}
      - name: Build
        run: go build
      - uses: actions/upload-artifact@v3
        with:
          name: binary
          path: alertapp
      - uses: zoftko/elfwatch-action@main
        with:
          file: alertapp
          token: ${{ secrets.ELF_WATCH_TOKEN }}
          server: https://happily-helped-imp.ngrok-free.app/api/analysis
